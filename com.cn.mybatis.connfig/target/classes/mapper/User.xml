<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" 
	"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<!-- namespace：匹配的接口  作用是隔离作用 其中#{}为占位符-->
<mapper namespace="test">

   <select id="selectById" parameterType="int" resultType="com.cn.mybatis.pojo.User">
		select * from user where id=#{value}
	</select> 
	<!--使用$拼接可能导致出现SQL注入
	${value}:接受输入参数的内容，如果传入的是简单类型，{}中只能使用value $：表示拼接符号-->
	
	<select id="selectByName" parameterType="int" resultType="com.cn.mybatis.pojo.User">
		select * from user where username like '%${value}%'
	</select>
	<!--将查询到主键，返回给user对象中
	<select keyProperty="id" order="AFTER"  >:得到刚insert进去的记录的主键值，只适用于自增主键
	selectKey：将查询到的主键值设置到parameterType制定的对象的属性
	order:<select keyProperty="id" order="AFTER"  >的执行顺序，相对于insert语句的执行顺序-->
	
   <insert id="insertUser" parameterType="com.cn.mybatis.pojo.User">
   <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
     SELECT LAST_INSERT_ID()
   </selectKey>
      insert into user(id,username,password,sex,birthday,isAdmin) value(#{id},#{username},#{password},#{sex},#{birthday},#{isAdmin})
   </insert>
   <!--对于非自增语句的返回
   通过UUID得到主键，将主键设置到user的id中，其次在执行insert时，从user中取出id的属性值
   -->
    <insert id="insertByUserName" parameterType="com.cn.mybatis.pojo.User">
   <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
     SELECT UUID()
   </selectKey>
      insert into user(id,username,password,sex,birthday,isAdmin) value(#{id},#{username},#{password},#{sex},#{birthday},#{isAdmin})
   </insert>
   <!---->
   <delete id="deleteById" parameterType="com.cn.mybatis.pojo.User">
    delete from user where id=#{id}
   </delete>
</mapper>